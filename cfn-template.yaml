AWSTemplateFormatVersion: 2010-09-09
Description: |
  The Roman Numerals Converter Application aims to convert the given
  number to the Roman numerals. The application is to be coded in 
  Python and deployed as a web application with Flask on AWS Elastic 
  Compute Cloud (EC2) Instance using AWS Cloudformation and CLI Services.

Parameters:
  imageID:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"
  keyPair:
    Description: Choose your keypair
    Type: AWS::EC2::KeyPair::KeyName
    Default: first_key
  instanceType:
    Description: Choose your instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t2.large

Resources:
  myWebServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref imageID
      InstanceType: !Ref instanceType
      KeyName: !Ref keyPair
      SecurityGroupIds:
        - !Ref mySecGrp 
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
      UserData: !Base64 |
        #! /bin/bash
        dnf update -y
        dnf install python3 -y
        dnf install python3-pip -y
        pip3 install flask
        cd /home/ec2-user
        FOLDER="https://raw.githubusercontent.com/muallaakman/Roman-Numerals-Converter/main"
        wget ${FOLDER}/roman-numerals-converter-app.py
        mkdir templates ; cd templates
        wget ${FOLDER}/templates/index.html
        wget ${FOLDER}/templates/result.html
        cd ..
        python3 roman-numerals-converter-app.py

  mySecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ssh and http # Required
      GroupName: roman-numerals-converter-project-scgrp
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  webSiteURL:
    Description: URL of website
    Value: !Sub
      - http://${PublicDNS}
      - PublicDNS: !GetAtt myWebServer.PublicDnsName